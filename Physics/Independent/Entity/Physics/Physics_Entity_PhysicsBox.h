#ifndef __GLTOY_ENTITY_MODELSTATIC_H_
#define __GLTOY_ENTITY_MODELSTATIC_H_

/////////////////////////////////////////////////////////////////////////////////////////////
// I N C L U D E S
/////////////////////////////////////////////////////////////////////////////////////////////

// Parents
#include <Entity/GLToy_Entity.h>

/////////////////////////////////////////////////////////////////////////////////////////////
// F O R W A R D   D E C L A R A T I O N S
/////////////////////////////////////////////////////////////////////////////////////////////

class Physics_Physics_Object;

/////////////////////////////////////////////////////////////////////////////////////////////
// C L A S S E S
/////////////////////////////////////////////////////////////////////////////////////////////

class Physics_Entity_PhysicsBox
: public GLToy_Entity_Oriented_AABB // TODO - need that GLToy_Entity_Oriented_OBB really...
{

    typedef GLToy_Entity_Oriented_AABB GLToy_Parent;

public:

    Physics_Entity_PhysicsBox( const GLToy_Hash uHash, const u_int uType );
    virtual ~Physics_Entity_PhysicsBox() {}

    void Spawn( const GLToy_AABB& xBB, const GLToy_Vector_3& xVelocity );

    virtual void Render() const;

protected:

    Physics_Physics_Object* m_pxPhysicsObject;

};

#endif